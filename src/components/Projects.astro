---
import { Image } from "astro:assets";
import type { ProjectProps } from "../data";
import Section from "./Section.astro";
import { TECH_MAP } from "../data/technologies";
import Modal from "./Modal.astro";

interface Props {
  projects: ProjectProps[];
  title: string;
  buttonsProject: string[];
}

const { projects, title, buttonsProject } = Astro.props;
---

<Section text={title} href="projects">
  <div
    class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mt-10"
    data-aos="fade-down"
    data-aos-duration="1000"
  >
    {
      projects.map((project, index) => (
        <div class="bg-white dark:bg-neutral-900 rounded-3xl shadow-lg overflow-hidden flex flex-col h-full transition-all duration-500 hover:scale-105">
          {/* Imagen principal */}
          <div class="w-full h-56 sm:h-64">
            <img
              src={project.image}
              alt={project.name}
              class="w-full h-full object-cover object-center"
              loading="lazy"
            />
          </div>

          {/* Contenido */}
          <div class="flex flex-col flex-1 justify-between p-5 sm:p-6">
            <div>
              <div class="flex items-center gap-2 mb-1">
                <h3 class="text-lg font-bold text-blue-600">{project.name}</h3>
                <span class="inline-block bg-blue-100 text-blue-800 text-xs px-2.5 py-0.5 rounded dark:bg-blue-900 dark:text-blue-300 whitespace-nowrap">
                  {project.type}
                </span>
              </div>
              <p class="text-xs text-neutral-700 dark:text-neutral-300">
                {project.summary}
              </p>

              <button
                onclick={`document.getElementById('modal-${index}')?.showModal()`}
                class="btn-readmore ml-auto block my-3"
              >
                {buttonsProject[0]}
              </button>

              <Modal
                project={project}
                id={`modal-${index}`}
                buttonsProject={buttonsProject}
              />
            </div>

            {/* Tecnolog√≠as */}
            <div class="flex flex-wrap gap-3 mb-6">
              {project.technologies.map((tech) => {
                const { icon, name } =
                  TECH_MAP[tech as keyof typeof TECH_MAP] ?? {};
                return icon && name ? (
                  <div
                    class="flex items-center bg-neutral-300 dark:bg-neutral-800 px-1 py-1 rounded-full 
                  text-xs text-black dark:text-white shadow-md "
                  >
                    <img
                      src={`/icons/${tech}.svg`}
                      alt={tech}
                      title={tech}
                      class="w-3 h-3 sm:w-4 sm:h-4 object-contain mr-1"
                      loading="lazy"
                    />
                    <span>{name}</span>
                  </div>
                ) : null;
              })}
            </div>

            {/* Botones */}
            <div class="flex flex-wrap justify-end gap-3 mt-auto">
              {project.linkApis && (
                <a href={project.linkApis} target="_blank" class="btn-project">
                  {buttonsProject[1]}
                </a>
              )}
              {project.linkSource && (
                <a
                  href={project.linkSource}
                  target="_blank"
                  class="btn-project"
                >
                  {buttonsProject[2]}
                </a>
              )}
              {project.linkPreview && (
                <a
                  href={project.linkPreview}
                  target="_blank"
                  class="btn-project"
                >
                  {buttonsProject[3]}
                </a>
              )}
            </div>
          </div>
        </div>
      ))
    }
  </div>
</Section>
