---
const { id, project, buttonsProject } = Astro.props;
const modal = project.modal;
import { TECH_MAP } from "../data/technologies";
---

<dialog
  id={id}
  role="dialog"
  aria-modal="true"
  onclick="if (event.target === this) this.close();"
  class="p-0 w-[min(92vw,48rem)] max-w-3xl rounded-2xl
         bg-white dark:bg-neutral-900 shadow-xl
         backdrop:bg-black/50 backdrop:backdrop-blur-sm
         max-h-[85vh] sm:max-h-[88vh] overflow-hidden"
>
  <!-- Contenedor con layout de 3 franjas: header (sticky), contenido scroll, footer (sticky) -->
  <div class="flex flex-col max-h-[85vh] sm:max-h-[88vh]">
    <!-- Header -->
    <div
      class="sticky top-0 z-10 px-4 sm:px-6 py-4
                bg-white/90 dark:bg-neutral-900/90 backdrop-blur
                border-b border-neutral-200/60 dark:border-neutral-800"
    >
      <div class="flex justify-between items-start">
        <h3 class="text-lg sm:text-xl font-bold text-blue-600">
          {project.name}
        </h3>
        <button
          onclick={`document.getElementById('${id}').close()`}
          class="h-8 w-8 grid place-content-center rounded-full
                 text-neutral-500 hover:text-red-500 hover:bg-neutral-100
                 dark:hover:bg-neutral-800 transition"
          aria-label="Cerrar">✕</button
        >
      </div>
    </div>

    <div class="px-4 sm:px-6 py-4 overflow-y-auto overscroll-contain">
      {
        modal?.summary && (
          <p class="italic text-sm sm:text-base text-neutral-600 dark:text-neutral-300 mb-4">
            {modal.summary}
          </p>
        )
      }

      {
        Array.isArray(modal?.text) && (
          <ul class="list-disc list-inside space-y-2 text-xs sm:text-sm text-neutral-700 dark:text-neutral-200 mb-6">
            {modal.text.map((item: any) => (
              <li>{item}</li>
            ))}
          </ul>
        )
      }

      <!-- Stack / tecnologías -->
      <div class="mb-2">
        <div class="flex flex-wrap gap-3">
          {
            project.technologies.map((tech: string) => {
              const { icon, name } =
                TECH_MAP[tech as keyof typeof TECH_MAP] ?? {};
              return icon && name ? (
                <div class="flex items-center bg-neutral-300 dark:bg-neutral-800 px-1 py-1 rounded-full text-xs text-black shadow-md">
                  <img
                    src={`/icons/${tech}.svg`}
                    alt={tech}
                    title={tech}
                    class="w-3 h-3 sm:w-4 sm:h-4 object-contain mr-1"
                    loading="lazy"
                  />
                  <span>{name}</span>
                </div>
              ) : null;
            })
          }
        </div>
      </div>
    </div>

    <!-- Footer fijo -->
    <div
      class="sticky bottom-0 z-10 px-4 sm:px-6 py-3
                bg-white/90 dark:bg-neutral-900/90 backdrop-blur
                border-t border-neutral-200/60 dark:border-neutral-800"
    >
      <div class="flex flex-wrap justify-end gap-3">
        {
          project.linkApis && buttonsProject?.[1] && (
            <a href={project.linkApis} target="_blank" class="btn-project">
              {buttonsProject[1]}
            </a>
          )
        }
        {
          project.linkSource && buttonsProject?.[2] && (
            <a href={project.linkSource} target="_blank" class="btn-project">
              {buttonsProject[2]}
            </a>
          )
        }
        {
          project.linkPreview && buttonsProject?.[3] && (
            <a href={project.linkPreview} target="_blank" class="btn-project">
              {buttonsProject[3]}
            </a>
          )
        }
      </div>
    </div>
  </div>
</dialog>
