---
const { id, project, buttonsProject } = Astro.props;
const modal = project.modal;
import { TECH_MAP } from "../data/technologies";
---

<dialog
  id={id}
  class="px-4 sm:px-6 py-6 rounded-2xl max-w-2xl w-full bg-white dark:bg-neutral-900 shadow-xl backdrop:bg-black/40 max-h-screen overflow-y-auto"
  onclick="if (event.target === this) this.close();"
>
  <!-- Header -->
  <div class="flex justify-between items-start mb-4">
    <h3 class="text-lg sm:text-xl font-bold text-blue-600">
      {project.name}
    </h3>

    <button
      onclick={`document.getElementById('${id}').close()`}
      class="text-neutral-400 hover:text-red-500 transition">âœ•</button
    >
  </div>

  <!-- Intro -->
  {
    modal && modal.summary && (
      <p class="italic text-sm sm:text-base text-neutral-600 dark:text-neutral-300 mb-4">
        {modal.summary}
      </p>
    )
  }

  <!-- Highlights -->
  {
    modal && Array.isArray(modal.text) && (
      <ul class="list-disc list-inside space-y-2 text-xs text-neutral-700 dark:text-neutral-200 mb-6">
        {modal.text.map((item: any) => (
          <li>{item}</li>
        ))}
      </ul>
    )
  }

  <!-- Stack by layers -->
  <div class="mb-6">
    <div class="flex flex-wrap gap-3 mb-6">
      {
        project.technologies.map((tech: string) => {
          const { icon, name } = TECH_MAP[tech as keyof typeof TECH_MAP] ?? {};
          return icon && name ? (
            <div
              class="flex items-center bg-neutral-300 dark:bg-neutral-800 px-1 py-1 rounded-full 
                  text-xs text-black dark:text-white shadow-md "
            >
              <img
                src={`/icons/${tech}.svg`}
                alt={tech}
                title={tech}
                class="w-3 h-3 sm:w-4 sm:h-4 object-contain mr-1"
              />
              <span>{name}</span>
            </div>
          ) : null;
        })
      }
    </div>
  </div>

  <!-- Actions -->
  <div class="flex justify-end gap-3">
    <div class="flex flex-wrap justify-end gap-3 mt-auto">
      {
        project.linkApis &&
          buttonsProject &&
          buttonsProject.length > 1 &&
          buttonsProject[1] && (
            <a href={project.linkApis} target="_blank" class="btn-project">
              {buttonsProject[1]}
            </a>
          )
      }
      {
        project.linkSource &&
          buttonsProject &&
          buttonsProject.length > 2 &&
          buttonsProject[2] && (
            <a href={project.linkSource} target="_blank" class="btn-project">
              {buttonsProject[2]}
            </a>
          )
      }
      {
        project.linkPreview &&
          buttonsProject &&
          buttonsProject.length > 3 &&
          buttonsProject[3] && (
            <a href={project.linkPreview} target="_blank" class="btn-project">
              {buttonsProject[3]}
            </a>
          )
      }
    </div>
  </div>
</dialog>
